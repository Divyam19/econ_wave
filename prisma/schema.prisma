// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator zod {
  provider              = "zod-prisma"
  output                = "./zod" 
  relationModel         = true 
  modelCase             = "camelCase" 
  modelSuffix           = "Schema" 
  useDecimalJs          = true 
  prismaJsonNullability = true 
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  location        location?
  queries         query[]
  recommendations reccomendation[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model retailer {
  id       String    @id @default(cuid())
  name     String
  email    String    @unique
  password String
  address  address?
  products product[]
}

model product {
  id          String   @id @default(cuid())
  name        String
  description String
  type        String
  price       Int
  retailer    retailer @relation(fields: [retailerId], references: [id])
  retailerId  String
}

model address {
  id         String   @id @default(cuid())
  city       String
  state      String
  country    String
  retailer   retailer @relation(fields: [retailerId], references: [id])
  retailerId String   @unique
}


model location {
  id      String @id @default(cuid())
  city    String
  state   String
  country String
  user    User   @relation(fields: [userId], references: [id])
  userId  String @unique
}

model query {
  id          String @id @default(cuid())
  name        String
  description String
  users       User[]
}

model reccomendation {
  id             String   @id @default(cuid())
  reccomendation String[]
  user           User     @relation(fields: [userId], references: [id])
  userId         String
}